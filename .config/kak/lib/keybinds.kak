# File picker. 
# map global user f -docstring "File picker" ':popup --title open --kak-script %{ edit %opt{popup_output} } -- sh -c "fd . --hidden --no-require-git --type file --base-directory ""$(dirname ""%val{buffile}"")"" --exclude ""$(basename ""%val{buffile}"")"" | fzf --preview-window nohidden --preview ""bat --color=always --style=header,grid --line-range :300 {}"" --height ""100%%"" --cycle --bind tab:down,shift-tab:up"<ret>'
# map global user <c-f> -docstring "Global file picker" ':popup --title open --kak-script %{ edit %opt{popup_output} } -- sh -c "fd --hidden --no-require-git --type file --exclude ""$(basename ""%val{buffile}"")"" | fzf --preview-window nohidden --preview ""bat --color=always --style=header,grid --line-range :300 {}"" --height ""100%%"" --cycle --bind tab:down,shift-tab:up"<ret>'

map global user <f> -docstring "File picker" ':popup --title open --kak-script %{ edit %opt{popup_output} } -- sh -c "fd --hidden --no-require-git --type file --exclude ""$(basename ""%val{buffile}"")"" | fzf --preview-window nohidden --preview ""bat --color=always --style=header,grid --line-range :300 {}"" --height ""100%%"" --cycle --bind tab:down,shift-tab:up"<ret>'

# Buffer picker.
# Don't ask how long it took me figure this out.
map global user b -docstring "Buffer picker" ':popup --title choose --kak-script %{ buffer %opt{popup_output} } -- sh -c "for item in %sh{printf ""%s\n"" ""$kak_buflist""}; do if [[ ""$item"" !=  ""%val{bufname}"" && ""$item"" != *\**\** ]]; then echo ""$item""; fi done | fzf --height ""100%%"" --cycle --bind tab:down,shift-tab:up" <ret>'
map global user <c-b> -docstring "Special buffer picker" ':popup --title choose --kak-script %{ buffer %opt{popup_output} } -- sh -c "for item in %sh{printf ""%s\n"" ""$kak_buflist""}; do if [[ ""$item"" != ""%val{bufname}"" && ""$item"" == *\**\** ]]; then echo ""$item""; fi done | fzf --height ""100%%"" --cycle --bind tab:down,shift-tab:up" <ret>'

# Search and replace.
map global normal <c-f> -docstring "Search and replace" ':popup --title search -- sh -c "search=$(: | fzf --height ""100%%"" --query=""%val{selection}"" --bind tab:down,shift-tab:up --bind=enter:print-query --preview-window=""down:99%%:nohidden"" --preview=""rg -U --fixed-strings --color=always {q} %val{buffile}"")  && replacement=$(: | fzf --height ""100%%"" --query=""$search"" --bind tab:down,shift-tab:up --bind=enter:print-query --preview-window=""down:99%%:nohidden"" --preview=""echo %val{buffile} | sad --exact --fzf=never ""$search"" {q}"") && echo ""%val{buffile}"" | sad --exact --commit ""$search"" ""$replacement"""<ret>'
map global normal <c-a-f> -docstring "Global search and replace" ':popup --title search -- sh -c "search=$(: | fzf --height ""100%%"" --query=""%val{selection}"" --bind tab:down,shift-tab:up --bind=enter:print-query --preview-window=""down:99%%:nohidden"" --preview=""fd --hidden --no-require-git --type file | xargs rg -U --fixed-strings --color=always {q}"")  && replacement=$(: | fzf --height ""100%%"" --query=""$search"" --bind tab:down,shift-tab:up --bind=enter:print-query --preview-window=""down:99%%:nohidden"" --preview=""rg -U --fixed-strings --files-with-matches ""$search"" | sad --exact --fzf=never ""$search"" {q}"") && rg -U --fixed-strings --files-with-matches ""$search"" | sad --exact --commit ""$search"" ""$replacement"""<ret>'

